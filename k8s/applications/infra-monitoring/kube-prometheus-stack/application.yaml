apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: infra-monitoring
  sources:
    - repoURL: 'https://prometheus-community.github.io/helm-charts'
      targetRevision: 55.*
      chart: kube-prometheus-stack
      helm:
        valuesObject:
          alertmanager:
            enabled: true
            podDisruptionBudget:
              enabled: true
            ingress:
              enabled: true
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-http-prod
                traefik.ingress.kubernetes.io/router.middlewares: identity-system-ak-outpost-leachnet-proxy-outpost@kubernetescrd
              hosts:
                - alertmanager.prometheus.net.theleachfamily.me.uk
              pathType: ImplementationSpecific
              tls:
                - hosts:
                    - alertmanager.prometheus.net.theleachfamily.me.uk
                  secretName: "alertmanager-cert"
          grafana:
            # https://github.com/grafana/helm-charts/issues/2899
            assertNoLeakedSecrets: false
            additionalDataSources:
              - name: Thanos
                uid: thanos
                type: prometheus
                jsonData:
                  prometheusType: Thanos
                  prometheusVersion: 0.32.5
                url: http://thanos-query.monitoring.svc.cluster.local:9090
                editable: false
                isDefault: true
            enabled: true
            extraSecretMounts:
              - name: secrets
                secretName: monitoring-stack
                defaultMode: 0440
                mountPath: /etc/secrets
                readOnly: true
            grafana.ini:
              server:
                root_url: https://grafana.net.theleachfamily.me.uk
              auth.basic:
                enabled: false
                disable_login_form: true
              auth:
                oauth_allow_insecure_email_lookup: "true"
              auth.generic_oauth:
                name: leachnet.
                enabled: true
                scopes: openid email profile
                client_id: $__file{/etc/secrets/grafanaOauthClientId}
                client_secret: $__file{/etc/secrets/grafanaOauthClientSecret}
                auth_url: https://auth.theleachfamily.me.uk/application/o/authorize/
                token_url: https://auth.theleachfamily.me.uk/application/o/token/
                api_url: https://auth.theleachfamily.me.uk/application/o/userinfo/
                role_attribute_path: contains(groups[*], 'Number 10 Superop') && 'Admin' ||  contains(groups[*], 'Number 10 Operator') && 'Editor' || 'Viewer'
              feature_toggles:
                enable: "nestedFolders publicDashboards correlations"
            ingress:
              enabled: true
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-http-prod
              hosts:
                - grafana.net.theleachfamily.me.uk
              pathType: ImplementationSpecific
              tls:
                - hosts:
                    - grafana.net.theleachfamily.me.uk
                  secretName: "grafana-cert"
            persistence:
              enabled: true
              type: pvc
              storageClassName: "vault-fast-nfs"
              accessModes:
               - ReadWriteOnce
              size: 1Gi
            sidecar:
              datasources:
                isDefaultDatasource: false
          prometheus:
            enabled: true
            prometheusSpec:
              externalLabels: 
                cluster_environment: leachnet
              podMonitorNamespaceSelector:
                any: true
              podMonitorSelector: {}
              podMonitorSelectorNilUsesHelmValues: false
              # remoteWrite:
              #   - url: "http://mimir-nginx.monitoring.svc.cluster.local/api/v1/push"
              retention: 7d
              ruleNamespaceSelector:
                any: true
              ruleSelector: {}
              ruleSelectorNilUsesHelmValues: false
              serviceMonitorNamespaceSelector:
                any: true
              serviceMonitorSelector: {}
              serviceMonitorSelectorNilUsesHelmValues: false
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: "vault-fast-nfs"
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 15Gi
              thanos:
                objectStorageConfig:
                  existingSecret: 
                    key: thanos.config
                    name: thanos-store-config
            thanosService:
              enabled: true
            thanosServiceMonitor:
              enabled: true
              interval: 5s
            podDisruptionBudget:
              enabled: true
            ingress:
              enabled: true
              annotations:
                cert-manager.io/cluster-issuer: "letsencrypt-http-prod"
                traefik.ingress.kubernetes.io/router.middlewares: identity-system-ak-outpost-leachnet-proxy-outpost@kubernetescrd
              hosts:
                - prometheus.net.theleachfamily.me.uk
              pathType: ImplementationSpecific
              tls:
                - hosts:
                    - prometheus.net.theleachfamily.me.uk
                  secretName: "alertmanager-cert"
          prometheusOperator:
            thanosImage:
              registry: quay.io
              repository: thanos/thanos
              # version: v0.32.5
              tag: v0.32.5
            namespaces: 
              releaseNamespace: true
              additional:
                - argocd
                - cert-manager
                - data
                - database
                - download
                - flight-tracking
                - homeautomation
                - identity-system
                - kube-flannel
                - kube-system
                - metallb-system
                - owntracks

    - repoURL: 'https://github.com/duckfullstop/infra-ln/'
      path: k8s/applications/infra-monitoring/kube-prometheus-stack/manifests
      targetRevision: main
  destination:
    namespace: monitoring
    name: leachnet
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - Validate=false
