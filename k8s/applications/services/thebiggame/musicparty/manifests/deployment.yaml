apiVersion: apps/v1
kind: Deployment
metadata:
  name: musicparty
  labels:
    app: musicparty
spec:
  selector:
    matchLabels:
      app: musicparty
  template:
    metadata:
      labels:
        app: musicparty
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  # Images only built for amd64
                  - amd64
      containers:
      - image: ghcr.io/mintopia/musicparty:develop
        name: musicparty
        imagePullPolicy: Always
        envFrom:
          - secretRef:
              name: musicparty
          - configMapRef:
              name: musicparty
        volumeMounts:
        - name: public
          mountPath: /app/storage/public
        - name: logs
          mountPath: /app/storage/logs
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        #resources:
        #  requests:
        #    memory: "40Mi"
        #    cpu: "50m"
        #  limits:
        #    memory: "75Mi"
        #    cpu: "100m"
      - image: ghcr.io/mintopia/musicparty:develop
        name: horizon
        imagePullPolicy: Always
        command: ["php", "artisan", "queue:work", "--queue=partyupdates,default"]
        # command: ["php", "artisan", "horizon"]
        envFrom:
          - secretRef:
              name: musicparty
          - configMapRef:
              name: musicparty
        volumeMounts:
        - name: public
          mountPath: /app/storage/public
        - name: logs
          mountPath: /app/storage/logs
      - image: ghcr.io/mintopia/musicparty:develop
        name: scheduler
        imagePullPolicy: Always
        command: ["php", "artisan", "schedule:work"]
        envFrom:
          - secretRef:
              name: musicparty
          - configMapRef:
              name: musicparty
        volumeMounts:
        - name: public
          mountPath: /app/storage/public
        - name: logs
          mountPath: /app/storage/logs
      - image: ghcr.io/mintopia/musicparty:develop
        name: reverb
        imagePullPolicy: Always
        command: ["php", "artisan", "reverb:start", "--debug", "--port=8080"]
        envFrom:
          - secretRef:
              name: musicparty
          - configMapRef:
              name: musicparty
        ports:
          - name: ws
            containerPort: 8080
        volumeMounts:
        - name: public
          mountPath: /app/storage/public
        - name: logs
          mountPath: /app/storage/logs
      # - image: mintopia/musicparty-notify:latest
      #   name: notify
      #   env:
      #     - name: MUSICPARTY_ENDPOINT
      #       value: "http://127.0.0.1/webhooks/parties/tbg53/simple"
      #     - name: MUSICPARTY_PROXY_URL
      #       value: "http://127.0.0.1/proxy"
      #     - name: MUSICPARTY_AUTHTOKEN
      #       valueFrom:
      #         secretKeyRef:
      #           name: musicparty
      #           key: NOTIFY_AUTHTOKEN
      #   volumeMounts:
      #   - name: spotify-cookies
      #     mountPath: /usr/src/app/cookies.json
      #     readOnly: true
      #     subPath: cookies.json
      volumes:
      - name: public
        persistentVolumeClaim:
          claimName: musicparty-data
      - name: logs
        emptyDir:
      # - name: spotify-cookies
      #   secret:
      #     secretName: musicparty
      #     items:
      #       - key: SPOTIFY_COOKIES
      #         path: cookies.json
